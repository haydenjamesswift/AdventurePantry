@using AP.CoreBusiness
@using AP.UseCases
@using AP.UseCases.Products.Interfaces

@inject IViewProductsByNameUseCase ViewProductsByNameUseCase

<table class="products-table">
    <thead>
        <tr>
            <th>ProductID</th>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var prod in products) {
            <tr>
                <td>@prod.ProductId</td>
                <td>@prod.ProductName</td>
                <td>@prod.Quantity</td>
                <td>@prod.Price</td>
                <td>
                    <a href="/admin/edit-product/@prod.ProductId">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    // Define products
    private List<Product>? products;

    // Filter products
    [Parameter] 
    public string? SearchProductFilter { get; set; }

    // Get products
    protected override async Task OnParametersSetAsync() {
        products = (await ViewProductsByNameUseCase.ExecuteAsync(SearchProductFilter??string.Empty)).ToList();
    }

}
